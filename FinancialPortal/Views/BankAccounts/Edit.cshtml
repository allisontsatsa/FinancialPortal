@model FinancialPortal.Models.BankAccount

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <h3>Make Changes</h3>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.HouseholdId)


    <div class="form-group">
        @Html.LabelFor(model => model.BankAccountTypeId, "Account Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("BankAccountTypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BankAccountTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, "Bank Account Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartingBalance, "Starting Balance", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartingBalance, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartingBalance, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.CurrentBalance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentBalance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentBalance, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.LowBalance, "Low Balance Alert Amount", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LowBalance, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LowBalance, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save Changes" class="btn btn-secondary" icon="fas fa-save" />
        </div>
    </div>
    <a class="btn btn-secondary" onclick="history.back(-1)">
        <i class="fas fa-arrow-alt-circle-left">
        </i>
        Go Back
        <br />
    </a>
    @*<a class="btn btn-secondary btn-sm" href="@Url.Action("Delete", "BankAccounts", new { id = Model.Id }, null)">*@
    <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#deleteAccount">
        <i class="fas fa-trash">
        </i>
        Delete Account
    </button>

</div>
    }
    <br />
</div>


<!--Delete Account Modal-->
<div class"container">
    <div class="modal fade" id="deleteAccount">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header" color="dark">
                    <h4 class="modal-title">Delete Account</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <h3>Are you sure you want to delete this account?</h3>
                    <div>
                        <br />
                        @*<dl class="dl-horizontal">
                            <dt>
            @Html.DisplayNameFor(model => model.BankAccountType.Id)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BankAccountType.Id)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Household.Id)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Household.Id)
        </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Name)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Name)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.CurrentBalance)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.CurrentBalance)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Created)
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Created)
                            </dd>


                            <dt>
            @Html.DisplayNameFor(model => model.LowBalance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LowBalance)
        </dd>

                        </dl>*@

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-actions no-color">
                                <input type="submit" value="Delete Account" class="btn btn-secondary" />
                                @*@Html.ActionLink("Back to List", "Index")*@
                            </div>
                        }

                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>

            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
